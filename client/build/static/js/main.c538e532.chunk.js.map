{"version":3,"sources":["components/Header.js","aws-exports.js","components/Charts/YesNoGraph.js","components/Charts/BarGraph.js","components/Main.js","components/Footer.js","App.js","index.js"],"names":["Header","className","awsmobile","YesNoGraph","props","dataFGraph","data","yes","no","labelsValue","dataValue","labels","datasets","backgroundColor","Object","keys","forEach","key","push","title","style","width","height","BarGraph","chartData","label","options","display","text","fontSize","legend","position","Amplify","configure","aws_exports","Main","useState","serverData","setServerData","useEffect","Axios","get","then","response","botName","welcomeMessage","onComplete","err","confirmation","post","console","log","slots","adaptation","betterForm","evaluationSchool","interruptingStudies","personalScale","remainForm","window","location","reload","clearOnComplete","conversationModeOn","flexDirection","total","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c538e532.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/header.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"header_image\">\r\n                <section className=\"hero\">\r\n                    <div className=\"container\">\r\n                        <h1>Pandemic Bot</h1>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","/* eslint-disable */\r\n// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten\r\n\r\nconst awsmobile = {\r\n    \"aws_project_region\": \"eu-west-2\",\r\n    \"aws_cognito_identity_pool_id\": \"eu-west-2:8b2718d1-e806-495f-9f82-fdd8c07ff38b\",\r\n    \"aws_cognito_region\": \"eu-west-2\",\r\n    \"oauth\": {},\r\n    \"aws_bots\": \"enable\",\r\n    \"aws_bots_config\": [\r\n        {\r\n            \"name\": \"ZCTbot\",\r\n            \"alias\": \"PandemicBot\",\r\n            \"region\": \"eu-west-2\"\r\n        }\r\n    ]\r\n};\r\n\r\nexport default awsmobile;\r\n","import React from 'react'\r\nimport {Pie} from 'react-chartjs-2'\r\n\r\nexport const YesNoGraph = (props) => {\r\n    const dataFGraph = props.data;\r\n    const yes = props.yes;\r\n    const no = props.no;\r\n\r\n    var labelsValue = [];\r\n    var dataValue = [];\r\n\r\n    const data = {\r\n        labels: labelsValue,\r\n        datasets: [{\r\n            data: dataValue,\r\n            backgroundColor: [yes, no]\r\n        }]\r\n    }\r\n\r\n    const splitData = () => {\r\n        dataFGraph && Object.keys(dataFGraph).forEach(key => {\r\n            labelsValue.push(key);\r\n            dataValue.push(dataFGraph[key])\r\n        })\r\n    } \r\n\r\n    return (\r\n        <div className=\"graphSection\">\r\n            {splitData()}\r\n            <h2>{props.title}</h2>\r\n            <div className=\"graph-container\" style={{width: '400px', height: '400px'}}>\r\n                <Pie\r\n                    data={{\r\n                        labels: data.labels,\r\n                        datasets: data.datasets,\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nexport const BarGraph = (props) => {\r\n    var dataFGraph = props.data;\r\n    var labelsValue = [];\r\n    var dataValue = [];\r\n\r\n    const chartData = {\r\n        labels: labelsValue,\r\n        datasets: [\r\n          {\r\n            label: \"\",\r\n            data: dataValue,\r\n            backgroundColor: [\r\n              \"rgb(38, 70, 83)\",\r\n              \"rgb(42, 157, 143)\",\r\n              \"rgb(233, 196, 106)\",\r\n              \"rgb(244, 162, 97)\",\r\n              \"rgb(231, 111, 81)\",\r\n            ],\r\n          },\r\n        ],\r\n    }\r\n\r\n\r\n    const splitData = () => {\r\n        dataFGraph && Object.keys(dataFGraph).forEach(key => {\r\n            labelsValue.push(key);\r\n            dataValue.push(dataFGraph[key])\r\n        })\r\n    } \r\n\r\n    return (\r\n        <div className=\"graphSection\">\r\n            {splitData()}\r\n            <h2>{props.title}</h2>\r\n            <div className=\"graph-container\" style={{width: '600px', height: '300px'}}>\r\n                <Bar\r\n                    data={chartData}\r\n                    options={{\r\n                            title: {\r\n                            display: true,\r\n                            text: \"Largest Scale of Persons\",\r\n                            fontSize: 20,\r\n                        },\r\n                        legend: {\r\n                        display: true,\r\n                        position: \"right\",\r\n                        },\r\n                    }}\r\n                />\r\n            </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport Amplify from 'aws-amplify';\r\nimport aws_exports from '../aws-exports';\r\nimport { ChatBot, AmplifyTheme } from 'aws-amplify-react'\r\nimport Axios from \"axios\";\r\n\r\nimport '../styles/main.css'\r\nimport { YesNoGraph } from './Charts/YesNoGraph';\r\nimport { BarGraph } from './Charts/BarGraph';\r\n\r\nAmplify.configure(aws_exports);\r\n\r\nexport const Main = () => {\r\n\r\n    const [serverData, setServerData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get('https://chatbot-app-lex.herokuapp.com/api/get').then((response) => {\r\n            const sData = response;\r\n            //console.log(response.data);\r\n            setServerData(response.data);\r\n        })\r\n    }, []);\r\n\r\n\r\n    const handleComplete = (err, confirmation) => {\r\n        Axios.post('https://chatbot-app-lex.herokuapp.com/api/post',confirmation).then(()=>{\r\n           if(err)console.log(err);\r\n\r\n\r\n           var data = serverData;\r\n        \r\n            data[\"adaptation\"][confirmation.slots.adaptation] += 1;\r\n            data[\"betterForm\"][confirmation.slots.betterForm] += 1;\r\n            data[\"evaluationSchool\"][confirmation.slots.evaluationSchool] += 1;\r\n            data[\"interruptingStudies\"][confirmation.slots.interruptingStudies] += 1;\r\n            data[\"personalScale\"][confirmation.slots.personalScale] += 1;\r\n            data[\"remainForm\"][confirmation.slots.remainForm] += 1;\r\n            \r\n            setServerData(data);\r\n            console.log(serverData)\r\n        })\r\n        window.location.reload()\r\n    }\r\n\r\n    return (\r\n        <main>\r\n        <section className=\"post-hero\">\r\n                <div className=\"container\">\r\n                    <h2 >Bot description</h2>\r\n                    <p className=\"bot-description\">\r\n                        This bot provides easy access to the opinion of the masses on the topic \"Education during a pandemic\". It makes it easy to collect information \r\n                        and graphically display it using graphs and their combinations. The bot guarantees complete anonymity and is not targeted at any specific institution. \r\n                        You don't have to be a student or teacher to express your opinion, this questionnaire is available to everyone.\r\n                        We hope you'll enjoy the debate with PandemicBot.\r\n                    </p>\r\n                    <p className=\"bot-description red-alert\">\r\n                        Please, try to provide really simple responses that would not confuse the PandemicBot.\r\n                        Bot is in early stage of training, so it's not able to process long answers. Thank you for understanding.\r\n                    </p>\r\n                </div>\r\n            </section>\r\n            \r\n          <section className=\"bot-section\">\r\n            <div className=\"container\">\r\n                <ChatBot\r\n                    title=\"PandemicBot\"\r\n                    botName=\"ZCTbot\"\r\n                    welcomeMessage=\"Hey, my name is PandemicBot! I would like to ask you some questions related to changes in schools that emerged during this crisis. Would you like to continue ?\"\r\n                    onComplete={handleComplete}\r\n                    clearOnComplete={true}\r\n                    conversationModeOn={false}\r\n                />\r\n            </div>\r\n          </section>\r\n\r\n          <section>\r\n            <div className=\"container\" style={{flexDirection: 'column'}}>\r\n                <div  className=\"section-info\">\r\n                    <h1>You can see opinions of the masses below</h1>\r\n                </div>\r\n                    <h2 className=\"container total\">Total respondents : {serverData.total} </h2>\r\n            </div>\r\n                \r\n                <div className=\"container\" style={{flexDirection: 'column'}}>\r\n\r\n                    <BarGraph\r\n                        data={serverData.personalScale}\r\n                        title={'How would you rate the impact of a pandemic on your life?'}/>\r\n\r\n                    <YesNoGraph data={serverData.evaluationSchool}\r\n                                yes={'#06D6A0'}\r\n                                no={'#EF476F'}\r\n                                title={'Was your evaluation influenced by changes in the form of teaching ?'}/>\r\n\r\n                    <BarGraph\r\n                        data={serverData.adaptation}\r\n                        title={'How has your school adapted to this situation?'}/>\r\n\r\n                    <YesNoGraph\r\n                        data={serverData.interruptingStudies}\r\n                        yes={'#FEE440'}\r\n                        no={'#F15BB5'}\r\n                        title={'Have you ever considered interrupting your studies?'}/>\r\n                    \r\n                    <YesNoGraph \r\n                        data={serverData.betterForm}            \r\n                        yes={'#FCBF49'} \r\n                        no={'#D62828'}  \r\n                        title={'Is there a better solution to manage the form of teaching ?'}\r\n                    />\r\n\r\n                    <YesNoGraph \r\n                        data={serverData.remainForm}            \r\n                        yes={'#FF9B54'} \r\n                        no={'#FF7F51'}  \r\n                        title={'Would you like this form of study to continue?'}/>\r\n\r\n                </div>\r\n          </section>\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport '../styles/footer.css'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"container\">\r\n                <p className=\"copyright\">©Hospodarsky Developeri 2021</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n","import './styles/bot.css'\r\nimport { Header } from './components/Header';\r\nimport { Main } from './components/Main';\r\nimport { Footer } from './components/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Main/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/global.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}